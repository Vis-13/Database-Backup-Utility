<Window x:Class="DBBackupUtil.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:DBBackupUtil" ResizeMode="NoResize"  
        mc:Ignorable="d" Title="Backup" Height="340" Width="800" Background="#FFCAF3BE">
    <WindowChrome.WindowChrome>
        <!--<WindowChrome GlassFrameThickness="5"
                      UseAeroCaptionButtons="False"
                      NonClientFrameEdges="None"
                      CaptionHeight="100" />-->
        <WindowChrome CaptionHeight="34" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" Padding="5" BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gold"/>
                    <Setter Property="Foreground" Value="#fff"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="btnGDriveList">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" Padding="5" BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <StackPanel x:Name="spUploadBtn" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}">
                                            <TextBlock x:Name="txtButtonContent" Text="{TemplateBinding Content}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"></TextBlock>
                                            <ProgressBar Name="pbUploadToGDrive" IsIndeterminate="{Binding MainViewModel.IsProcessing.Value, Source={StaticResource ServiceLocator}, Mode=OneWay}" Height="10" Width="175" Margin="0,2,0,2" ></ProgressBar>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding MainViewModel.IsProcessing.Value, Source={StaticResource ServiceLocator}}" Value="True">
                                                <!-- define your triggered value here -->
                                                <Setter TargetName="txtButtonContent" Property="Text" Value="Uploading To GDrive...." />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#fff" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="#fff"/>
                </Trigger>
                <DataTrigger Binding="{Binding MainViewModel.IsProcessing.Value, Source={StaticResource ServiceLocator}}" Value="True">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="sbBackSucc"></StopStoryboard>
                        <StopStoryboard BeginStoryboardName="sbHasEx"/>
                        <BeginStoryboard x:Name="sbIsProcessing" >
                            <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                <ColorAnimation From="Red" To="#fff" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding MainViewModel.HasExceptionOccuredWhileBackingup.Value, Source={StaticResource ServiceLocator}}" Value="True">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="sbIsProcessing"></StopStoryboard>
                        <BeginStoryboard x:Name="sbHasEx">
                            <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                <!--<ColorAnimation From="#fff" To="Red" Duration="0:0:3"/>-->
                                <ColorAnimation From="Red" To="#fff" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                                <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(Button.Content)" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever">
                                    <DiscreteStringKeyFrame Value="Error Uploading..." KeyTime="0:0:0" />
                                    <DiscreteStringKeyFrame Value="Restart App if possible" KeyTime="0:0:1" />
                                </StringAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="sbHasEx"></StopStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding MainViewModel.BackupUploadedSuccessfully.Value, Source={StaticResource ServiceLocator}}" Value="True">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="sbIsProcessing"></StopStoryboard>
                        <StopStoryboard BeginStoryboardName="sbHasEx"></StopStoryboard>
                        <BeginStoryboard x:Name="sbBackSucc">
                            <Storyboard Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                <ColorAnimation From="Green" To="#fff" Duration="0:0:10"/>
                                <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(Button.Content)" Duration="0:0:4" AutoReverse="False" FillBehavior="Stop">
                                    <!-- All the key frames below are DiscreteStringKeyFrames. Discrete key frames create 
                sudden "jumps" between values (no interpolation). Only discrete key frames can be used 
                for String key frame animations. -->
                                    <DiscreteStringKeyFrame Value="Up" KeyTime="0:0:0" />
                                    <DiscreteStringKeyFrame Value="Uploa" KeyTime="0:0:.5" />
                                    <DiscreteStringKeyFrame Value="Uploading" KeyTime="0:0:1" />
                                    <DiscreteStringKeyFrame Value="Uploading Succ" KeyTime="0:0:1.5" />
                                    <DiscreteStringKeyFrame Value="Uploading Successfull!" KeyTime="0:0:2" />
                                    <DiscreteStringKeyFrame Value="..." KeyTime="0:0:2.5" />
                                    <DiscreteStringKeyFrame Value="......." KeyTime="0:0:3" />
                                    <DiscreteStringKeyFrame Value="............." KeyTime="0:0:3.5" />
                                    <!--<DiscreteStringKeyFrame Value="Start" KeyTime="0:0:3.5" />
                                    <DiscreteStringKeyFrame Value="Start Up" KeyTime="0:0:4" />
                                    <DiscreteStringKeyFrame Value="Start Uploadin" KeyTime="0:0:4.5" />
                                    <DiscreteStringKeyFrame Value="Start Uploading To" KeyTime="0:0:5" />
                                    <DiscreteStringKeyFrame Value="Start Uploading To G" KeyTime="0:0:5.5" />
                                    <DiscreteStringKeyFrame Value="Start Uploading To GDrive" KeyTime="0:0:6" />-->
                                </StringAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="btnLightRed">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" Padding="5" BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightCoral"/>
                    <Setter Property="Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="btnGray">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" Padding="5" BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGray"/>
                    <Setter Property="Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Base style for title bar buttons-->
        <Style x:Key="CaptionButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                                <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Minimize-->
        <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE949;"/>
        </Style>
        <!--Maximize-->
        <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE739;"/>
        </Style>
        <!--Restore-->
        <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE923;"/>
        </Style>
        <!--Close-->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE106;"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="MinWidth" Value="100"></Setter>
            <Setter Property="MaxHeight" Value="40"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
        </Style>
    </Window.Resources>
    <!--Title bar button commands-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
        <!--<CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />-->
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Restore" />
    </Window.CommandBindings>
    <Border x:Name="MainWindowBorder" BorderBrush="LightCoral" BorderThickness="0" Margin="0,0,0,0" >
        <Grid x:Name="parentContainer" Background="LightBlue" IsEnabled="{Binding MainViewModel.IsProcessing.Value, Source={StaticResource ServiceLocator}, Mode=OneWay, Converter={StaticResource NegatingConverter}}" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="123*"/>
                <ColumnDefinition Width="677*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="31*" />
                <RowDefinition Height="273*"/>
            </Grid.RowDefinitions>
            <!--Window chrome-->
            <Grid Background="#F999" Grid.ColumnSpan="2" Height="35" VerticalAlignment="top">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <!--App icon-->
                    <Image Source="/Resources/watermelon.ico" Width="18" Margin="2" VerticalAlignment="Center" />
                    <TextBlock Text="Backup Utility" FontFamily="Arial" FontSize="16" FontWeight="Bold" Margin="4 3 0 0" />
                </StackPanel>
                <!--Caption buttons-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Style="{StaticResource MinimizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Minimize" Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                    <Button x:Name="RestoreButton" Visibility="Collapsed" Style="{StaticResource RestoreButtonStyle}" Command="{x:Static SystemCommands.RestoreWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Restore"/>
                    <!--<Button x:Name="MaximizeButton" Visibility="Visible" Style="{StaticResource MaximizeButtonStyle}" Command="{x:Static SystemCommands.MaximizeWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Maximize" />-->
                    <Button Style="{StaticResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Close" Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                </StackPanel>
            </Grid>
            <!--App content-->
            <WrapPanel Grid.Row="1" Margin="10,5,5,5" Grid.ColumnSpan="2">
                <Grid x:Name="AppArea" Width="786">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="101*"/>
                        <ColumnDefinition Width="161*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Margin="0,0,10,0" Height="285" VerticalAlignment="Top" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="133*"/>
                            <RowDefinition Height="51*"/>
                            <RowDefinition Height="101*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="69*"/>
                            <ColumnDefinition Width="319*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Database" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20" FontWeight="DemiBold" Width="128" Height="38" Margin="0,23,0,0"/>
                        <ScrollViewer x:Name="sv" Grid.Column="1" Margin="2,2,2,10" ScrollViewer.VerticalScrollBarVisibility="Visible" CanContentScroll="True">                            
                            <ItemsControl x:Name="icCS" Margin="2,2,5,2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical">                                
                                <ItemsControl.ItemsSource><Binding Path="MainViewModel.CStringsDBToBackup" Source="{StaticResource ServiceLocator}"/></ItemsControl.ItemsSource>                            
                                <ItemsControl.ItemTemplate>                                    
                                    <DataTemplate>
                                        <StackPanel Margin="2,2,2,2">
                                            <i:Interaction.Behaviors>
                                                <local:ScrollToBehavior IsProcessing="{Binding IsProcessing.Value}" />
                                            </i:Interaction.Behaviors>                                            
                                            <Grid Margin="5,0,0,0"  Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" HorizontalAlignment="Left" MinHeight="42" Height="44" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="95*"/>
                                                    <ColumnDefinition Width="8*"/>
                                                    <ColumnDefinition Width="8*"/>
                                                </Grid.ColumnDefinitions>
                                                <Border BorderThickness="3" BorderBrush="Blue" CornerRadius="5">
                                                    <TextBox x:Name="txtConnectionString" VerticalContentAlignment="Center" IsEnabled="{Binding IsProcessing.Value, Converter={StaticResource NegatingConverter}, NotifyOnTargetUpdated=True}" Text="{Binding SqlConnectionString, Mode=TwoWay}" SelectionBrush="#FFDADADA" FontSize="23" Height="42">
                                                        </TextBox>
                                                    <Border.Style>
                                                        <Style>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsProcessing.Value}" Value="True">
                                                                    <Setter Property="local:ScrollToBehavior.IsProcessing" Value="True"/>
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard x:Name="sbCS">
                                                                            <Storyboard Storyboard.TargetProperty="BorderBrush.Color">                                                                                
                                                                                <ColorAnimation From="Red" To="#FF3AFF00" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <StopStoryboard BeginStoryboardName="sbCS"></StopStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding HasErrors}" Value="True">                                                                    
                                                                    <DataTrigger.EnterActions>                                                                        
                                                                        <StopStoryboard BeginStoryboardName="sbCS"></StopStoryboard>
                                                                        <BeginStoryboard x:Name="sbCSError">
                                                                            <Storyboard Storyboard.TargetProperty="BorderBrush.Color">
                                                                                <ColorAnimation From="Red" To="Red" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <StopStoryboard BeginStoryboardName="sbCSError"></StopStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                                <Button x:Name="btnChangeDatabase" Click="btnDatabase_Click" Tag="{Binding }" Margin="5,0,0,0"  HorizontalAlignment="Right" Grid.Column="1" Height="38" ToolTip="Change Connection String">
                                                    <Path x:Name="pathChangeConnectionString" Width="20"  Height="20" Data="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" Fill="Red" Stretch="Uniform" />
                                                </Button>
                                                <Button x:Name="btnRemoveDatabase" Command="{Binding MainViewModel.RemoveConnectionStringCommand, Source={StaticResource ServiceLocator}}" CommandParameter="{Binding }" HorizontalAlignment="Left" Grid.Column="2" ToolTip="Remove Database from Backup List" Margin="5,0,0,0" Height="38">
                                                    <Path x:Name="pathRemoveDB" Width="20" Height="20" Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" Fill="Red" Stretch="Uniform" />
                                                </Button>
                                            </Grid>                                            
                                            <GridSplitter Height="1" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" Margin="1,3,1,1" IsEnabled="False"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                        <Label Grid.Row="1" Content="Backup Folder" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontWeight="DemiBold" Width="138" Height="38"/>
                        <TextBox Grid.Row="1" x:Name="txtFolder" Grid.Column="1" VerticalContentAlignment="Center" Text="{Binding MainViewModel.BackupFolderPath, Mode=TwoWay, Source={StaticResource ServiceLocator}}" HorizontalAlignment="Left" Margin="10,0,0,0" Padding="2,0,0,2" FontSize="22" FontWeight="Bold" MinHeight="45" Height="46" Width="528"/>
                        <Button x:Name="btnSelectFolder" Content="Folder" Grid.Column="1" HorizontalAlignment="Left" Margin="543,0,0,0" Grid.Row="1" Width="90" Click="btnSelectFolder_Click" Height="40" VerticalAlignment="Center"/>
                        <Button Content="Start Uploading To GDrive" x:Name="btnGDriveList" Style="{StaticResource btnGDriveList}"  Grid.Column="1" HorizontalAlignment="Left" Margin="69,6,0,0" Grid.Row="2" VerticalAlignment="Top" Height="40" Width="218" IsEnabled="{Binding MainViewModel.IsProcessing.Value, Converter={StaticResource NegatingConverter}, Mode=OneWay, NotifyOnTargetUpdated=True, Source={StaticResource ServiceLocator}}" 
                            Command="{Binding MainViewModel.BackupCommand, Source={StaticResource ServiceLocator}}"/>
                        <Button Content="Cancel" x:Name="btnCancel" Click="btnCancel_Click" Grid.Column="1" HorizontalAlignment="Left" Margin="304,6,0,0" Grid.Row="2" VerticalAlignment="Top" Height="40" Width="166"/>
                        <StackPanel Grid.Row="2" Margin="0,5,10,5">
                            <TextBox x:Name="txtBackUpInterval" HorizontalAlignment="Left" TextAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0" FontSize="30" TextWrapping="Wrap" Width="94" Height="39" Text="{Binding MainViewModel.BackupIntervalInMins, Mode=TwoWay, Source={StaticResource ServiceLocator}, UpdateSourceTrigger=Explicit}" 
                                     IsEnabled="{Binding MainViewModel.IsProcessing.Value, Converter={StaticResource NegatingConverter}, Mode=OneWay, Source={StaticResource ServiceLocator}}">
                                <TextBox.InputBindings>
                                    <KeyBinding Gesture="Enter" Command="{Binding MainViewModel.SetBackupIntervalCommand, Source={StaticResource ServiceLocator}}" CommandParameter="{Binding Text, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <TextBlock Margin="10,2,5,0"><Run Foreground="Red" FontSize="10" FontWeight="Bold" Text="Backup interval :"/><LineBreak/>
                                <InlineUIContainer><TextBlock Margin="10,0,0,0" Foreground="Red" FontSize="10" FontWeight="Bold" Text="{Binding MainViewModel.BackupIntervalInMins, Mode=TwoWay, Source={StaticResource ServiceLocator}}"/></InlineUIContainer><Run Text=" "/><Run Foreground="Red" FontSize="10" FontWeight="Bold" Text="minutes"/></TextBlock>
                        </StackPanel>
                        <Button HorizontalAlignment="Left" Margin="31,65,0,0" Name="btnAddConnectionString" Click="btnAddConnectionString_Click" VerticalAlignment="Top" Width="32" Height="28">
                            <Path Stretch="Fill" Fill="Red" Stroke="{x:Null}" StrokeThickness="3" Data="M3.875,0 L5.125,0 5.125,3.875 9,3.875 9,5.125 5.125,5.125 5.125,9 3.875,9 3.875,5.125 0,5.125 0,3.875 3.875,3.875 3.875,0 z" />
                        </Button>
                    </Grid>
                </Grid>
            </WrapPanel>
            <TextBlock Name="lblErrorMsg" FontSize="20" FontWeight="Bold" Foreground="Red" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="99,250,0,1" Grid.Row="1" Width="701"
                       Text="{Binding MainViewModel.LastBackupExceptionMsg.Value, Source={StaticResource ServiceLocator}, Mode=OneWay}" Grid.ColumnSpan="2"/>
        </Grid>
    </Border>
</Window>
